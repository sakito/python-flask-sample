daemon off;

worker_processes auto;
worker_rlimit_nofile 10240;

events {
    worker_connections 1024;
    multi_accept on;
    #use epoll;
    use kqueue;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    # ログ形式(これはサンプルで極力出しています。必要に応じてカスタム推奨)
    log_format ltsv "time:$time_iso8601"
                    "\thost:$remote_addr"
                    "\tport:$remote_port"
                    "\tmethod:$request_method"
                    "\tlength:$request_length"
                    "\turi:$request_uri"
                    "\tstatus:$status"
                    "\tsize:$body_bytes_sent"
                    "\treferer:$http_referer"
                    "\tua:$http_user_agent"
                    "\treqtime:$request_time"
                    "\tuser:$remote_user"
                    "\tforwardedfor:$http_x_forwarded_for"
                    "\tcache:$upstream_http_x_cache"
                    "\tupstream_addr:%$upstream_addr"
                    "\truntime:$upstream_http_x_runtime"
                    "\tupstream_cache_status:$upstream_cache_status"
                    "\tupstream_response_time:$upstream_response_time"
                    "\tvhost:$host";

    access_log  log/nginx-access.log  ltsv;
    error_log   log/nginx-error.log   notice;

    client_body_temp_path tmp/client_body_temp;
    fastcgi_temp_path     tmp/fastcgi_temp;
    proxy_temp_path       tmp/proxy_temp_path;
    scgi_temp_path        tmp/scgi_temp;
    uwsgi_temp_path       tmp/uwsgi_temp;

    sendfile        on;
    tcp_nopush      on;

    keepalive_timeout  65;

    server_tokens   off;

    gzip  on;
    gzip_comp_level 2;
    gzip_min_length 3k;
    gzip_proxied    any;
    gzip_types      text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    open_file_cache          max=1000 inactive=20s;
    open_file_cache_valid    60s;
    open_file_cache_min_uses 1;
    open_file_cache_errors   on;

    ssl_protocols TLSv1.2 TLSv1.3;

    upstream api_server {
        server unix:var/run/sample_api_rest.sock fail_timeout=120s;
    }

    upstream ui_server {
        server unix:var/run/sample_ui.sock fail_timeout=120s;
    }

    server {
        listen       8080;
        server_name  localhost;

        charset utf-8;

        client_max_body_size 100m;

        #location / {
        #    root   html;
        #    index  index.html index.htm;
        #}

        location ^~ /ui {
            allow all;
            proxy_pass http://ui_server;
            proxy_read_timeout 120s;
            proxy_send_timeout 120s;
        }

        location ^~ /api {
            allow all;
            proxy_pass http://api_server;
            proxy_read_timeout 120s;
            proxy_send_timeout 120s;
        }

        # エラーページ
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # nginx status
        # 本番運用ファイルでは停止する事
        location ^~ /nginx_status {
            stub_status on;
            access_log  off;
        }
    }

}
